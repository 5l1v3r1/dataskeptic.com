FROM mhart/alpine-node:latest

LABEL maintainer="Kyle Polich"

ARG NODE_ENV
ARG HOST
ARG PORT
ARG HTTPS_PORT
ARG BASE_URL
ARG SITE_BUCKET
ARG IPINFO_TOKEN
ARG BASE_API
ARG ELASTIC_SEARCH_ENDPOINT
ARG STRIPE
ARG SP
ARG SLACK
ARG ITUNES
ARG TEMP_FILES
ARG AWS_ACCESS_KEY_ID
ARG AWS_SECRET_ACCESS_KEY
ARG AWS_REGION
ARG AWS_CONFIG_S3_BUCKET
ARG AWS_CONFIG_S3_KEY
ARG RECORDING_SOURCE
ARG RECORDING_AWS_PROPOSALS_BUCKET
ARG RECORDING_AWS_FILES_BUCKET
ARG RECORDING_LOCKED_FILE_NAME
ARG RECORDING_TEMP_FILES
ARG RECORDING_EMAILS_ADMIN
ARG INFLUXDB_ON
ARG INFLUXDB_HOST
ARG INFLUXDB_DATABASE
ARG INFLUXDB_PORT
ARG INFLUXDB_USER
ARG INFLUXDB_PASSWORD
ARG AUTH_SALT
ARG AUTH_LINKEDIN_ON
ARG AUTH_LINKEDIN_CLIENT_ID
ARG AUTH_LINKEDIN_CLIENT_SECRET
ARG AUTH_LINKEDIN_CLIENT_CALLBACK_URL
ARG AUTH_GOOGLE_ON
ARG AUTH_GOOGLE_CLIENT_ID
ARG AUTH_GOOGLE_CLIENT_SECRET
ARG AUTH_GOOGLE_CLIENT_CALLBACK_URL
ARG PLAYER_METADATA
ARG CHAT_LOGS
ARG CAREERS_EMAIL_ADMIN
ARG CAREERS_FILES_BUCKET

RUN mkdir -p /usr/src/app
WORKDIR /usr/src/app

## Copy dependencies file
COPY package.json /usr/src/app/
COPY package-lock.json /usr/src/app/

RUN npm install --save-dev -g babel-cli 

## Copy app sources
COPY . /usr/src/app

RUN rm -rf /usr/src/app/node_modules

## Specify NPM version
RUN npm i -g npm@5.6.0

## Install app dependencies
RUN npm install --production --loglevel=verbose

COPY startup.sh /
RUN ./bin/info.sh

## TODO remove all config/env files in terms of security
RUN rm -rf /usr/src/app/.env

RUN npm run-script build

## Expose used ports
EXPOSE 80 443 4430 3000 9001

## Run
CMD ["/bin/sh", "-c", "/usr/src/app/startup.sh"]
